import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.util.*;

// board class â€” subclasses panel; essentially handles everything inside the window... most of the game is here, it's like the "real" main. the board is has quantised locations, like an ascii art game except it's not ascii... made this descision b/c otherwise the scale to speed up development

public class Board extends JPanel implements Palette, Runnable, KeyListener{ 
    private double genesisTime;
    private static double fps = 24;
    private static int localOriginX = 160;
    private static int localOriginY = -20;
    private static int height = 7;
    private static int width = 10;
    private boolean getKeySpace = false;
    private Player player;

    private Sprite playerSprite;
    private Sprite playerSprite2;
    private ArrayList<Sprite> playerSpriteSheet;

    private Sprite obstacleSprite;
    public ArrayList<Obstacle> obstacles;

    private int spawnNext;
    private int spawnNextMin;
    private int consecutiveSpawnCount;
    private boolean gameOver = false;

    

    
    public Board(){ //constructor - sets everything up, initialises entities etc. (time also starts here);
        super();
        setFocusable(true);
        addKeyListener(this);
        genesisTime = System.currentTimeMillis();

        for (int i =1; i<2; i++){
        Sprite genSprite = new Sprite();genSprite.clear();ArrayList<Color> subl0 = new ArrayList<Color>(); subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(62,71,114));subl0.add(new Color(62,71,114));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));genSprite.add(subl0);ArrayList<Color> subl1 = new ArrayList<Color>(); subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(62,71,114));subl1.add(new Color(62,71,114));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(62,71,114));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));genSprite.add(subl1);ArrayList<Color> subl2 = new ArrayList<Color>(); subl2.add(new Color(255,255,255));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));subl2.add(new Color(255,105,97));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));subl2.add(new Color(255,255,255));subl2.add(new Color(190,153,134));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));genSprite.add(subl2);ArrayList<Color> subl3 = new ArrayList<Color>(); subl3.add(new Color(62,71,114));subl3.add(new Color(255,105,97));subl3.add(new Color(255,105,97));subl3.add(new Color(255,105,97));subl3.add(new Color(62,71,114));subl3.add(new Color(190,153,134));subl3.add(new Color(190,153,134));subl3.add(new Color(62,71,114));subl3.add(new Color(62,71,114));subl3.add(new Color(165,187,159));subl3.add(new Color(217,201,179));subl3.add(new Color(190,153,134));subl3.add(new Color(62,71,114));subl3.add(new Color(190,153,134));subl3.add(new Color(217,201,179));subl3.add(new Color(62,71,114));genSprite.add(subl3);ArrayList<Color> subl4 = new ArrayList<Color>(); subl4.add(new Color(62,71,114));subl4.add(new Color(255,105,97));subl4.add(new Color(255,105,97));subl4.add(new Color(255,105,97));subl4.add(new Color(62,71,114));subl4.add(new Color(62,71,114));subl4.add(new Color(190,153,134));subl4.add(new Color(62,71,114));subl4.add(new Color(165,187,159));subl4.add(new Color(165,187,159));subl4.add(new Color(62,71,114));subl4.add(new Color(62,71,114));subl4.add(new Color(167,199,231));subl4.add(new Color(190,153,134));subl4.add(new Color(62,71,114));subl4.add(new Color(62,71,114));genSprite.add(subl4);ArrayList<Color> subl5 = new ArrayList<Color>(); subl5.add(new Color(62,71,114));subl5.add(new Color(250,160,160));subl5.add(new Color(250,160,160));subl5.add(new Color(255,105,97));subl5.add(new Color(255,105,97));subl5.add(new Color(217,201,179));subl5.add(new Color(217,201,179));subl5.add(new Color(190,153,134));subl5.add(new Color(165,187,159));subl5.add(new Color(165,187,159));subl5.add(new Color(165,187,159));subl5.add(new Color(167,199,231));subl5.add(new Color(167,199,231));subl5.add(new Color(190,153,134));subl5.add(new Color(62,71,114));subl5.add(new Color(255,255,255));genSprite.add(subl5);ArrayList<Color> subl6 = new ArrayList<Color>(); subl6.add(new Color(62,71,114));subl6.add(new Color(250,160,160));subl6.add(new Color(250,160,160));subl6.add(new Color(255,255,255));subl6.add(new Color(255,105,97));subl6.add(new Color(217,201,179));subl6.add(new Color(217,201,179));subl6.add(new Color(217,201,179));subl6.add(new Color(165,187,159));subl6.add(new Color(165,187,159));subl6.add(new Color(165,187,159));subl6.add(new Color(167,199,231));subl6.add(new Color(62,71,114));subl6.add(new Color(190,153,134));subl6.add(new Color(62,71,114));subl6.add(new Color(255,255,255));genSprite.add(subl6);ArrayList<Color> subl7 = new ArrayList<Color>(); subl7.add(new Color(62,71,114));subl7.add(new Color(250,160,160));subl7.add(new Color(250,160,160));subl7.add(new Color(255,255,255));subl7.add(new Color(255,105,97));subl7.add(new Color(62,71,114));subl7.add(new Color(62,71,114));subl7.add(new Color(217,201,179));subl7.add(new Color(62,71,114));subl7.add(new Color(165,187,159));subl7.add(new Color(165,187,159));subl7.add(new Color(167,199,231));subl7.add(new Color(167,199,231));subl7.add(new Color(190,153,134));subl7.add(new Color(62,71,114));subl7.add(new Color(62,71,114));genSprite.add(subl7);ArrayList<Color> subl8 = new ArrayList<Color>(); subl8.add(new Color(62,71,114));subl8.add(new Color(250,160,160));subl8.add(new Color(250,160,160));subl8.add(new Color(255,255,255));subl8.add(new Color(255,105,97));subl8.add(new Color(217,201,179));subl8.add(new Color(217,201,179));subl8.add(new Color(217,201,179));subl8.add(new Color(62,71,114));subl8.add(new Color(62,71,114));subl8.add(new Color(217,201,179));subl8.add(new Color(190,153,134));subl8.add(new Color(62,71,114));subl8.add(new Color(190,153,134));subl8.add(new Color(217,201,179));subl8.add(new Color(62,71,114));genSprite.add(subl8);ArrayList<Color> subl9 = new ArrayList<Color>(); subl9.add(new Color(62,71,114));subl9.add(new Color(250,160,160));subl9.add(new Color(250,160,160));subl9.add(new Color(255,255,255));subl9.add(new Color(255,105,97));subl9.add(new Color(62,71,114));subl9.add(new Color(217,201,179));subl9.add(new Color(62,71,114));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(62,71,114));subl9.add(new Color(62,71,114));subl9.add(new Color(255,255,255));subl9.add(new Color(190,153,134));subl9.add(new Color(62,71,114));subl9.add(new Color(62,71,114));genSprite.add(subl9);ArrayList<Color> subl10 = new ArrayList<Color>(); subl10.add(new Color(255,255,255));subl10.add(new Color(62,71,114));subl10.add(new Color(62,71,114));subl10.add(new Color(62,71,114));subl10.add(new Color(62,71,114));subl10.add(new Color(255,255,255));subl10.add(new Color(62,71,114));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(62,71,114));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));genSprite.add(subl10);ArrayList<Color> subl11 = new ArrayList<Color>(); subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));genSprite.add(subl11);ArrayList<Color> subl12 = new ArrayList<Color>(); subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));genSprite.add(subl12);ArrayList<Color> subl13 = new ArrayList<Color>(); subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(233,233,233));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));genSprite.add(subl13);ArrayList<Color> subl14 = new ArrayList<Color>(); subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));genSprite.add(subl14);ArrayList<Color> subl15 = new ArrayList<Color>(); subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));genSprite.add(subl15);
        playerSprite = genSprite;
        playerSprite.setPixel(13, 8, cl);
        genSprite = new Sprite();genSprite.clear();  subl0 =  new ArrayList<Color>(); subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(62,71,114));subl0.add(new Color(62,71,114));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));genSprite.add(subl0);  subl1 =  new ArrayList<Color>(); subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(62,71,114));subl1.add(new Color(62,71,114));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(62,71,114));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));genSprite.add(subl1);  subl2 =  new ArrayList<Color>(); subl2.add(new Color(255,255,255));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));subl2.add(new Color(255,105,97));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));subl2.add(new Color(255,255,255));subl2.add(new Color(190,153,134));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));genSprite.add(subl2);  subl3 =  new ArrayList<Color>(); subl3.add(new Color(62,71,114));subl3.add(new Color(255,105,97));subl3.add(new Color(255,105,97));subl3.add(new Color(255,105,97));subl3.add(new Color(62,71,114));subl3.add(new Color(190,153,134));subl3.add(new Color(190,153,134));subl3.add(new Color(62,71,114));subl3.add(new Color(62,71,114));subl3.add(new Color(165,187,159));subl3.add(new Color(217,201,179));subl3.add(new Color(190,153,134));subl3.add(new Color(62,71,114));subl3.add(new Color(190,153,134));subl3.add(new Color(217,201,179));subl3.add(new Color(62,71,114));genSprite.add(subl3);  subl4 =  new ArrayList<Color>(); subl4.add(new Color(62,71,114));subl4.add(new Color(255,105,97));subl4.add(new Color(255,105,97));subl4.add(new Color(255,105,97));subl4.add(new Color(62,71,114));subl4.add(new Color(62,71,114));subl4.add(new Color(190,153,134));subl4.add(new Color(62,71,114));subl4.add(new Color(165,187,159));subl4.add(new Color(165,187,159));subl4.add(new Color(62,71,114));subl4.add(new Color(62,71,114));subl4.add(new Color(167,199,231));subl4.add(new Color(190,153,134));subl4.add(new Color(62,71,114));subl4.add(new Color(62,71,114));genSprite.add(subl4);  subl5 =  new ArrayList<Color>(); subl5.add(new Color(62,71,114));subl5.add(new Color(250,160,160));subl5.add(new Color(250,160,160));subl5.add(new Color(255,105,97));subl5.add(new Color(255,105,97));subl5.add(new Color(217,201,179));subl5.add(new Color(217,201,179));subl5.add(new Color(190,153,134));subl5.add(new Color(165,187,159));subl5.add(new Color(165,187,159));subl5.add(new Color(165,187,159));subl5.add(new Color(165,187,159));subl5.add(new Color(190,153,134));subl5.add(new Color(62,71,114));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));genSprite.add(subl5);  subl6 =  new ArrayList<Color>(); subl6.add(new Color(62,71,114));subl6.add(new Color(250,160,160));subl6.add(new Color(250,160,160));subl6.add(new Color(255,255,255));subl6.add(new Color(255,105,97));subl6.add(new Color(217,201,179));subl6.add(new Color(217,201,179));subl6.add(new Color(217,201,179));subl6.add(new Color(165,187,159));subl6.add(new Color(165,187,159));subl6.add(new Color(165,187,159));subl6.add(new Color(165,187,159));subl6.add(new Color(190,153,134));subl6.add(new Color(62,71,114));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));genSprite.add(subl6);  subl7 =  new ArrayList<Color>(); subl7.add(new Color(62,71,114));subl7.add(new Color(250,160,160));subl7.add(new Color(250,160,160));subl7.add(new Color(255,255,255));subl7.add(new Color(255,105,97));subl7.add(new Color(62,71,114));subl7.add(new Color(62,71,114));subl7.add(new Color(217,201,179));subl7.add(new Color(62,71,114));subl7.add(new Color(165,187,159));subl7.add(new Color(165,187,159));subl7.add(new Color(190,153,134));subl7.add(new Color(62,71,114));subl7.add(new Color(62,71,114));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));genSprite.add(subl7);  subl8 =  new ArrayList<Color>(); subl8.add(new Color(62,71,114));subl8.add(new Color(250,160,160));subl8.add(new Color(250,160,160));subl8.add(new Color(255,255,255));subl8.add(new Color(255,105,97));subl8.add(new Color(217,201,179));subl8.add(new Color(217,201,179));subl8.add(new Color(217,201,179));subl8.add(new Color(62,71,114));subl8.add(new Color(62,71,114));subl8.add(new Color(167,199,231));subl8.add(new Color(190,153,134));subl8.add(new Color(217,201,179));subl8.add(new Color(62,71,114));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));genSprite.add(subl8);  subl9 =  new ArrayList<Color>(); subl9.add(new Color(62,71,114));subl9.add(new Color(250,160,160));subl9.add(new Color(250,160,160));subl9.add(new Color(255,255,255));subl9.add(new Color(255,105,97));subl9.add(new Color(62,71,114));subl9.add(new Color(217,201,179));subl9.add(new Color(62,71,114));subl9.add(new Color(62,71,114));subl9.add(new Color(217,201,179));subl9.add(new Color(62,71,114));subl9.add(new Color(190,153,134));subl9.add(new Color(62,71,114));subl9.add(new Color(62,71,114));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));genSprite.add(subl9);  subl10 =  new ArrayList<Color>(); subl10.add(new Color(255,255,255));subl10.add(new Color(62,71,114));subl10.add(new Color(62,71,114));subl10.add(new Color(62,71,114));subl10.add(new Color(62,71,114));subl10.add(new Color(255,255,255));subl10.add(new Color(62,71,114));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(62,71,114));subl10.add(new Color(255,255,255));subl10.add(new Color(62,71,114));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));genSprite.add(subl10);  subl11 =  new ArrayList<Color>(); subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));genSprite.add(subl11);  subl12 =  new ArrayList<Color>(); subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));genSprite.add(subl12);  subl13 =  new ArrayList<Color>(); subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));genSprite.add(subl13);  subl14 =  new ArrayList<Color>(); subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));genSprite.add(subl14);  subl15 =  new ArrayList<Color>(); subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));genSprite.add(subl15);
        playerSprite2 = genSprite;
        }
        
        playerSpriteSheet = new ArrayList<Sprite>();
        playerSpriteSheet.add(playerSprite);
        playerSpriteSheet.add(playerSprite2);

        for (int i = 1; i <2; i++){
            Sprite genSprite = new Sprite();genSprite.clear();ArrayList<Color> subl0 = new ArrayList<Color>(); subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(62,71,114));subl0.add(new Color(62,71,114));subl0.add(new Color(62,71,114));genSprite.add(subl0);ArrayList<Color> subl1 = new ArrayList<Color>(); subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(62,71,114));subl1.add(new Color(62,71,114));subl1.add(new Color(167,199,231));subl1.add(new Color(167,199,231));subl1.add(new Color(167,199,231));genSprite.add(subl1);ArrayList<Color> subl2 = new ArrayList<Color>(); subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));subl2.add(new Color(167,199,231));subl2.add(new Color(167,199,231));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));genSprite.add(subl2);ArrayList<Color> subl3 = new ArrayList<Color>(); subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(62,71,114));subl3.add(new Color(62,71,114));subl3.add(new Color(167,199,231));subl3.add(new Color(167,199,231));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));genSprite.add(subl3);ArrayList<Color> subl4 = new ArrayList<Color>(); subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(62,71,114));subl4.add(new Color(62,71,114));subl4.add(new Color(167,199,231));subl4.add(new Color(167,199,231));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));genSprite.add(subl4);ArrayList<Color> subl5 = new ArrayList<Color>(); subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(62,71,114));subl5.add(new Color(62,71,114));subl5.add(new Color(167,199,231));subl5.add(new Color(167,199,231));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));genSprite.add(subl5);ArrayList<Color> subl6 = new ArrayList<Color>(); subl6.add(new Color(255,255,255));subl6.add(new Color(62,71,114));subl6.add(new Color(62,71,114));subl6.add(new Color(167,199,231));subl6.add(new Color(167,199,231));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));genSprite.add(subl6);ArrayList<Color> subl7 = new ArrayList<Color>(); subl7.add(new Color(62,71,114));subl7.add(new Color(167,199,231));subl7.add(new Color(167,199,231));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));genSprite.add(subl7);ArrayList<Color> subl8 = new ArrayList<Color>(); subl8.add(new Color(62,71,114));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));genSprite.add(subl8);ArrayList<Color> subl9 = new ArrayList<Color>(); subl9.add(new Color(255,255,255));subl9.add(new Color(62,71,114));subl9.add(new Color(62,71,114));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));genSprite.add(subl9);ArrayList<Color> subl10 = new ArrayList<Color>(); subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(62,71,114));subl10.add(new Color(62,71,114));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));genSprite.add(subl10);ArrayList<Color> subl11 = new ArrayList<Color>(); subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(62,71,114));subl11.add(new Color(62,71,114));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));genSprite.add(subl11);ArrayList<Color> subl12 = new ArrayList<Color>(); subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(62,71,114));subl12.add(new Color(62,71,114));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));genSprite.add(subl12);ArrayList<Color> subl13 = new ArrayList<Color>(); subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(62,71,114));subl13.add(new Color(62,71,114));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));genSprite.add(subl13);ArrayList<Color> subl14 = new ArrayList<Color>(); subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(62,71,114));subl14.add(new Color(62,71,114));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));genSprite.add(subl14);ArrayList<Color> subl15 = new ArrayList<Color>(); subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(62,71,114));subl15.add(new Color(62,71,114));subl15.add(new Color(62,71,114));genSprite.add(subl15);
            obstacleSprite = genSprite;
        }

        player =  new Player(3,6,playerSpriteSheet);
        player.addBoard(this);

        player.addPhysics(new Physics(player, this));

        obstacles = new ArrayList<Obstacle>();
        spawnNext = getTime() + 3000;
        consecutiveSpawnCount = 0;
        spawnNextMin = 4;

    }

    @Override
    public void paintComponent(Graphics pen){  //override paint component â€” everything gets drawn here
        super.paintComponent(pen);
        pen.setColor(bl);
        pen.drawRect(localOriginX-1,localOriginY - 1,PIXEL_WIDTH*SPRITE_WIDTH*width + 1, PIXEL_HEIGHT*SPRITE_HEIGHT*height + 1);
        drawEntity(player, pen);
        for (Obstacle obstacle : obstacles){
            drawEntity(obstacle, pen);
        }
    }

    public int getTime(){ // get time â€” time is kept track here â€“ timer begins when board constructer is called
        return (int) (System.currentTimeMillis() - genesisTime);
    }

    public String run(){ // run â€” meat of what is called in the loop in main. entity behaviours, key detection, etc.
        if (getTime() % (int)(1/(fps/1000)) == 0){
            repaint(); 
            
            Iterator<Obstacle> it = obstacles.iterator();
            while (it.hasNext()){
                Obstacle obstacle = it.next();
                obstacle.run();
                if (obstacle.getX() < 0){
                    it.remove();
                }
            }
            spawnObstacle();
        }
        player.run();
        
        return toString() + " running";   
    }

    private int getRealX(int boardX, int pixelX){ // get x/y â€” figureing out where to draw things on the screen relative to the quantised positions on the board
        return (boardX * SPRITE_WIDTH * PIXEL_WIDTH) + localOriginX + (PIXEL_WIDTH * pixelX);
    }

    private int getRealY(int boardY, int pixelY){
        return (boardY * SPRITE_HEIGHT * PIXEL_WIDTH) + localOriginY + (PIXEL_HEIGHT * pixelY) - 1;
    }

    private void drawEntity(Entity entity, Graphics pen){ // draw entity â€” everything on the board can be drawn with this thanks to entity interface
        for (int pixelX = 0; pixelX < SPRITE_WIDTH; pixelX++){
            for (int pixelY = 0; pixelY < SPRITE_HEIGHT; pixelY++){
                pen.setColor(entity.getPixel(pixelX,pixelY));
                int realX = getRealX(entity.getX(), pixelX);
                int realY = getRealY(entity.getY(), pixelY);
                pen.fillRect(realX, realY, PIXEL_WIDTH, PIXEL_HEIGHT);
            }
        }
    }


    public boolean getKeySpace(){
        return getKeySpace;
    }
    @Override
    public void keyTyped(KeyEvent e){// i'm choosing not to implement this, but it needs to be here for the interface

    }
    @Override
    public void keyPressed(KeyEvent e){ // key prealsssed/released etc. â€” updates get key
        int key = e.getKeyChar();
        if (key == 32){
            getKeySpace = true;
        }
    }
    @Override
    public void keyReleased(KeyEvent e){ // key pressed/released etc. â€” updates get key
        int key = e.getKeyChar();
        if (key == 32){
            getKeySpace = false;
        }
    }
    public boolean playerDown(Obstacle o, int x, int y){
        if (gameOver){
            return false;
        }
        if (player.getX() ==  x && player.getY() == y){
            ArrayList<Sprite> sheet = new ArrayList<Sprite>();
            sheet.add(new Sprite());
            sheet.add(new Sprite());
            player.setSprite(sheet);
            player.jump();
            player.setSprite(0);
            Sprite genSprite = new Sprite();genSprite.clear();ArrayList<Color> subl0 = new ArrayList<Color>(); subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(255,255,255));subl0.add(new Color(62,71,114));subl0.add(new Color(62,71,114));subl0.add(new Color(62,71,114));genSprite.add(subl0);ArrayList<Color> subl1 = new ArrayList<Color>(); subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(255,255,255));subl1.add(new Color(62,71,114));subl1.add(new Color(62,71,114));subl1.add(new Color(250,160,160));subl1.add(new Color(250,160,160));subl1.add(new Color(250,160,160));genSprite.add(subl1);ArrayList<Color> subl2 = new ArrayList<Color>(); subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(255,255,255));subl2.add(new Color(62,71,114));subl2.add(new Color(62,71,114));subl2.add(new Color(250,160,160));subl2.add(new Color(250,160,160));subl2.add(new Color(255,105,97));subl2.add(new Color(255,105,97));subl2.add(new Color(255,105,97));genSprite.add(subl2);ArrayList<Color> subl3 = new ArrayList<Color>(); subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(62,71,114));subl3.add(new Color(62,71,114));subl3.add(new Color(250,160,160));subl3.add(new Color(250,160,160));subl3.add(new Color(255,105,97));subl3.add(new Color(255,105,97));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));subl3.add(new Color(255,255,255));genSprite.add(subl3);ArrayList<Color> subl4 = new ArrayList<Color>(); subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(62,71,114));subl4.add(new Color(62,71,114));subl4.add(new Color(250,160,160));subl4.add(new Color(250,160,160));subl4.add(new Color(255,105,97));subl4.add(new Color(255,105,97));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));subl4.add(new Color(255,255,255));genSprite.add(subl4);ArrayList<Color> subl5 = new ArrayList<Color>(); subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(62,71,114));subl5.add(new Color(62,71,114));subl5.add(new Color(250,160,160));subl5.add(new Color(250,160,160));subl5.add(new Color(255,105,97));subl5.add(new Color(255,105,97));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));subl5.add(new Color(255,255,255));genSprite.add(subl5);ArrayList<Color> subl6 = new ArrayList<Color>(); subl6.add(new Color(255,255,255));subl6.add(new Color(62,71,114));subl6.add(new Color(62,71,114));subl6.add(new Color(250,160,160));subl6.add(new Color(250,160,160));subl6.add(new Color(255,105,97));subl6.add(new Color(255,105,97));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));subl6.add(new Color(255,255,255));genSprite.add(subl6);ArrayList<Color> subl7 = new ArrayList<Color>(); subl7.add(new Color(62,71,114));subl7.add(new Color(250,160,160));subl7.add(new Color(250,160,160));subl7.add(new Color(255,105,97));subl7.add(new Color(255,105,97));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));subl7.add(new Color(255,255,255));genSprite.add(subl7);ArrayList<Color> subl8 = new ArrayList<Color>(); subl8.add(new Color(62,71,114));subl8.add(new Color(250,160,160));subl8.add(new Color(255,105,97));subl8.add(new Color(255,105,97));subl8.add(new Color(255,105,97));subl8.add(new Color(255,105,97));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));subl8.add(new Color(255,255,255));genSprite.add(subl8);ArrayList<Color> subl9 = new ArrayList<Color>(); subl9.add(new Color(255,255,255));subl9.add(new Color(62,71,114));subl9.add(new Color(62,71,114));subl9.add(new Color(255,105,97));subl9.add(new Color(255,105,97));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));subl9.add(new Color(255,255,255));genSprite.add(subl9);ArrayList<Color> subl10 = new ArrayList<Color>(); subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(62,71,114));subl10.add(new Color(62,71,114));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));subl10.add(new Color(255,255,255));genSprite.add(subl10);ArrayList<Color> subl11 = new ArrayList<Color>(); subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(62,71,114));subl11.add(new Color(62,71,114));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));subl11.add(new Color(255,255,255));genSprite.add(subl11);ArrayList<Color> subl12 = new ArrayList<Color>(); subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(62,71,114));subl12.add(new Color(62,71,114));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));subl12.add(new Color(255,255,255));genSprite.add(subl12);ArrayList<Color> subl13 = new ArrayList<Color>(); subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(62,71,114));subl13.add(new Color(62,71,114));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));subl13.add(new Color(255,255,255));genSprite.add(subl13);ArrayList<Color> subl14 = new ArrayList<Color>(); subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(62,71,114));subl14.add(new Color(62,71,114));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));subl14.add(new Color(255,255,255));genSprite.add(subl14);ArrayList<Color> subl15 = new ArrayList<Color>(); subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(255,255,255));subl15.add(new Color(62,71,114));subl15.add(new Color(62,71,114));subl15.add(new Color(62,71,114));genSprite.add(subl15);
            o.setSprite(genSprite);
            gameOver = true;
            return true;
        }
        return false;
    }

    // spawn obstacle â€” initiallises obsticles at specific but also to an extent randomized intervals
    private void spawnObstacle(){ // spawn obstacle â€” initiallises obsticles at specific but also to an extent randomized intervals
        if (spawnNext <= getTime()){
            obstacles.add(new Obstacle(this, obstacleSprite));
            if (consecutiveSpawnCount >0){
                spawnNext = getTime() + Obstacle.getDelay();
                consecutiveSpawnCount--;
            } else {
                spawnNext = getTime() + Obstacle.getDelay() * (spawnNextMin + (int)(Math.random() * 14));
                if ((int) (Math.random() * 6) == 1){
                    consecutiveSpawnCount = 2;
                }
            }
        }
        
        
    }
    // calculate score â€” score based on current time

    // draw score - draws scoreboard
}
